#version 410
in vec2 pos;
out vec4 fragColor;

uniform sampler2D colormap;
uniform sampler2D normalmap;
uniform sampler2D positionmap;

uniform vec3 sunDirection;
uniform vec3 backgroundColor;

#include includes/shadows.shd;

float get_lighting(vec3 pos, vec3 norm)
{
  float sa = get_total_shadow_amount(vec4(pos,1));
  float aspect = max(0.,dot(norm, sunDirection));
  if (aspect < 1e-3)
    return 0.3;
  return max(0.3,0.9*aspect*(1-sa));
}

void main()
{
  fragColor.a = 1;

  vec3 normal = texture(normalmap,pos).xyz;
  vec3 position = texture(positionmap,pos).xyz;
  if (length(normal)<0.001)
  {
    fragColor.rgb = backgroundColor;
    return;
  }
  fragColor.rgb = texture(colormap,pos).xyz*get_lighting(position,normal);
}
